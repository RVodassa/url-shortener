// Code generated by MockGen. DO NOT EDIT.
// Source: storage.go

// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// DeleteUrl mocks base method.
func (m *MockStorage) DeleteUrl(ctx context.Context, alias string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUrl", ctx, alias)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteUrl indicates an expected call of DeleteUrl.
func (mr *MockStorageMockRecorder) DeleteUrl(ctx, alias interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUrl", reflect.TypeOf((*MockStorage)(nil).DeleteUrl), ctx, alias)
}

// Disconnect mocks base method.
func (m *MockStorage) Disconnect(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Disconnect", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Disconnect indicates an expected call of Disconnect.
func (mr *MockStorageMockRecorder) Disconnect(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Disconnect", reflect.TypeOf((*MockStorage)(nil).Disconnect), ctx)
}

// GetUrl mocks base method.
func (m *MockStorage) GetUrl(ctx context.Context, alias string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrl", ctx, alias)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrl indicates an expected call of GetUrl.
func (mr *MockStorageMockRecorder) GetUrl(ctx, alias interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrl", reflect.TypeOf((*MockStorage)(nil).GetUrl), ctx, alias)
}

// SaveUrl mocks base method.
func (m *MockStorage) SaveUrl(ctx context.Context, alias, UrlSave string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveUrl", ctx, alias, UrlSave)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveUrl indicates an expected call of SaveUrl.
func (mr *MockStorageMockRecorder) SaveUrl(ctx, alias, UrlSave interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveUrl", reflect.TypeOf((*MockStorage)(nil).SaveUrl), ctx, alias, UrlSave)
}
