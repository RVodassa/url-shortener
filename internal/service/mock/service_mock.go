// Code generated by MockGen. DO NOT EDIT.
// Source: grpcHandler.go

// Package mock_grpchandler is a generated GoMock package.
package mock_grpchandler

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockServiceProvider is a mock of ServiceProvider interface.
type MockServiceProvider struct {
	ctrl     *gomock.Controller
	recorder *MockServiceProviderMockRecorder
}

// MockServiceProviderMockRecorder is the mock recorder for MockServiceProvider.
type MockServiceProviderMockRecorder struct {
	mock *MockServiceProvider
}

// NewMockServiceProvider creates a new mock instance.
func NewMockServiceProvider(ctrl *gomock.Controller) *MockServiceProvider {
	mock := &MockServiceProvider{ctrl: ctrl}
	mock.recorder = &MockServiceProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceProvider) EXPECT() *MockServiceProviderMockRecorder {
	return m.recorder
}

// DeleteUrl mocks base method.
func (m *MockServiceProvider) DeleteUrl(ctx context.Context, alias string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUrl", ctx, alias)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteUrl indicates an expected call of DeleteUrl.
func (mr *MockServiceProviderMockRecorder) DeleteUrl(ctx, alias interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUrl", reflect.TypeOf((*MockServiceProvider)(nil).DeleteUrl), ctx, alias)
}

// GetUrl mocks base method.
func (m *MockServiceProvider) GetUrl(ctx context.Context, alias string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrl", ctx, alias)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrl indicates an expected call of GetUrl.
func (mr *MockServiceProviderMockRecorder) GetUrl(ctx, alias interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrl", reflect.TypeOf((*MockServiceProvider)(nil).GetUrl), ctx, alias)
}

// SaveUrl mocks base method.
func (m *MockServiceProvider) SaveUrl(ctx context.Context, UrlStr string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveUrl", ctx, UrlStr)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveUrl indicates an expected call of SaveUrl.
func (mr *MockServiceProviderMockRecorder) SaveUrl(ctx, UrlStr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveUrl", reflect.TypeOf((*MockServiceProvider)(nil).SaveUrl), ctx, UrlStr)
}
