// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRandomProvider is a mock of RandomProvider interface.
type MockRandomProvider struct {
	ctrl     *gomock.Controller
	recorder *MockRandomProviderMockRecorder
}

// MockRandomProviderMockRecorder is the mock recorder for MockRandomProvider.
type MockRandomProviderMockRecorder struct {
	mock *MockRandomProvider
}

// NewMockRandomProvider creates a new mock instance.
func NewMockRandomProvider(ctrl *gomock.Controller) *MockRandomProvider {
	mock := &MockRandomProvider{ctrl: ctrl}
	mock.recorder = &MockRandomProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRandomProvider) EXPECT() *MockRandomProviderMockRecorder {
	return m.recorder
}

// RandomString mocks base method.
func (m *MockRandomProvider) RandomString(arg0 int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RandomString", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RandomString indicates an expected call of RandomString.
func (mr *MockRandomProviderMockRecorder) RandomString(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RandomString", reflect.TypeOf((*MockRandomProvider)(nil).RandomString), arg0)
}
